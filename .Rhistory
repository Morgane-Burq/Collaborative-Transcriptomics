lm2_5<-lm(as.numeric(vitesse_longueur_f1) ~ as.numeric(plante_genotype) ,data= data_final)
plot(lm2_5)
summary(lm2_5)
anova(lm2_5)
shapiro.test(lm2_5$residuals)
lm2_6<-lm(as.numeric(vitesse_largeur_f1) ~ as.numeric(plante_genotype) ,data= data_final)
plot(lm2_6)
summary(lm2_6)
anova(lm2_6)
lm3_1<-lm(as.numeric(Longueur_feuille_2) ~ as.numeric(Position) ,data= data_final)
lm3_1<-lm(Longueur_feuille_2 ~ as.numeric(Position) ,data= data_final)
lm3_1<-lm(Longueur_feuille_2 ~ Position ,data= data_final)
lm3_1<-lm(as.numeric(Longueur_feuille_2) ~ Position ,data= data_final)
plot(lm3_1)
shapiro.test(lm3_1$residuals)
bartlett.test(as.numeric(Longueur_feuille_2) ~ Position ,data= data_final)
summary(lm3_1)
anova(lm3_1)
lm3_2<-lm(as.numeric(Largeur_feuille_2) ~ Position ,data= data_final)
plot(lm3_2)
shapiro.test(lm3_2$residuals)
summary(lm3_2)
anova(lm3_2)
lm3_3<-lm(as.numeric(vitesse_coleoptile_feuille_1) ~ Position ,data= data_final)
plot(lm3_3)
summary(lm3_3)
anova(lm3_3)
lm3_4<-lm(as.numeric(vitesse_coleoptile_feuille_2) ~ Position ,data= data_final)
plot(lm3_4)
summary(lm3_4)
anova(lm3_4)
lm3_5<-lm(as.numeric(vitesse_longueur_f1) ~ Position ,data= data_final)
plot(lm3_5)
summary(lm3_5)
anova(lm3_5)
lm3_6<-lm(as.numeric(vitesse_largeur_f1) ~ Position ,data= data_final)
plot(lm3_6)
shapiro.test(lm3_6$residuals)
summary(lm3_6)
anova(lm3_6)
lm4_1<-lm(as.numeric(Longueur_feuille_2) ~ Monoculture_Couple ,data= data_final)
plot(lm4_1)
shapiro.test(lm4_1$residuals)
summary(lm4_1)
anova(lm4_1)
lm4_2<-lm(as.numeric(Largeur_feuille_2) ~ Monoculture_Couple ,data= data_final)
plot(lm4_2)
shapiro.test(lm4_2$residuals)
summary(lm4_2)
anova(lm4_2)
lm4_3<-lm(as.numeric(vitesse_coleoptile_feuille_1) ~ Monoculture_Couple ,data= data_final)
plot(lm4_3)
summary(lm4_3)
anova(lm4_3)
lm4_4<-lm(as.numeric(vitesse_coleoptile_feuille_2) ~ Monoculture_Couple ,data= data_final)
plot(lm4_4)
summary(lm4_4)
anova(lm4_4)
lm4_5<-lm(as.numeric(vitesse_longueur_f1) ~ Monoculture_Couple ,data= data_final)
plot(lm4_5)
summary(lm4_5)
anova(lm4_5)
lm4_6<-lm(as.numeric(vitesse_largeur_f1) ~ Monoculture_Couple ,data= data_final)
plot(lm4_6)
summary(lm4_6)
anova(lm4_6)
View(lm1_1)
summary(lm2_2)
summary(lm2_3)
summary(lm2_5)
lm2_5<-lm(as.numeric(vitesse_longueur_f1) ~ as.numeric(plante_genotype) + Position ,data= data_final)
plot(lm2_5)
anova(lm2_5)
summary(lm3_5)
lm2_5<-lm(as.numeric(vitesse_longueur_f1) ~ as.numeric(plante_genotype) + Position + Monoculture_Couple ,data= data_final)
summary(lm2_5)
anova(lm2_5)
lm2_5<-lm(as.numeric(vitesse_longueur_f1) ~ as.numeric(plante_genotype) + Position + Monoculture_Couple ,data= data_final)
anova(lm2_5)
lm2_5<-lm(as.numeric(vitesse_longueur_f1) ~ as.numeric(plante_genotype) + Position + Monoculture_Couple ,data= data_final)
anova(lm2_5)
summary(lm2_5)
lm2_5<-lm(as.numeric(vitesse_longueur_f1) ~ plante_genotype + Position + Monoculture_Couple ,data= data_final)
summary(lm2_5)
anova(lm2_5)
View(data_final_vitesse_coleoptile_feuille_1_no_NA)
lm4_5<-lm(as.numeric(vitesse_longueur_f1) ~ Monoculture_Couple ,data= data_final)
summary(lm4_5)
anova(lm4_5)
library(tidyverse)
library(lme4)
library(Rcpp)
library(lmerTest)
library(car)
library(ggplot2)
library(cowplot)
library(lmerTest)
library(tidyverse)
library(lme4)
library(Rcpp)
library(lmerTest)
library(car)
library(ggplot2)
library(cowplot)
library(sommer)
liste_rht<-read.csv("liste_génotypes.csv")
data_final<-as_tibble(read.csv("Mesures_neighbors_final.tsv",header=TRUE,sep="\t"))
for (elt in (1:nrow(data_final))){
if (data_final$plante_genotype[elt]%in%c("114","235","329","376","395","482","89")){
data_final$RHT_rht[elt]="rht"
}
else{
data_final$RHT_rht[elt]="RHT"
}
}
data_dates<-read.csv("Mesures_neighbors_dates.csv",header=TRUE,sep=",")
data_dates<-read.csv("Mesures_neighbors_dates.csv",header=TRUE,sep=",")
liste<-which(!is.na(data_dates$date_ligule_1)&(is.na(data_dates$date_ligule_2)))
data_dates$date_ligule_2=as.numeric(substr(data_dates$date_ligule_2,1,2))
data_dates<-data_dates %>% mutate(RHT_rht=data_final$RHT_rht)
liste2<-which(is.na(data_final$Longueur_feuille_2))
liste3<-which(data_final$Couple%in%data_final$Couple[liste2])
liste_vitesse_coleoptile_feuille_2<-append(liste3,which(data_final$Couple == data_final$Couple[which(data_final$vitesse_coleoptile_feuille_2<0)]))
View(data_final)
data_final_pair = data_final[c(1:253)*2,]
data_final_impair = data_final[c((1:253)*2 -1),]
data_final_pair$voisin = data_final_impair$plante_genotype
data_final_impair$voisin = data_final_pair$plante_genotype
data_final = as.data.frame(rbind(data_final_pair,data_final_impair))
liste_rht<-read.csv("liste_génotypes.csv")
data_final<-as_tibble(read.csv("Mesures_neighbors_final.tsv",header=TRUE,sep="\t"))
for (elt in (1:nrow(data_final))){
if (data_final$plante_genotype[elt]%in%c("114","235","329","376","395","482","89")){
data_final$RHT_rht[elt]="rht"
}
else{
data_final$RHT_rht[elt]="RHT"
}
}
names(data_final)
data_dates<-read.csv("Mesures_neighbors_dates.csv",header=TRUE,sep=",")
liste<-which(!is.na(data_dates$date_ligule_1)&(is.na(data_dates$date_ligule_2)))
data_dates$date_ligule_2=as.numeric(substr(data_dates$date_ligule_2,1,2))
data_dates<-data_dates %>% mutate(RHT_rht=data_final$RHT_rht)
liste2<-which(is.na(data_final$Longueur_feuille_2))
liste3<-which(data_final$Couple%in%data_final$Couple[liste2])
liste_vitesse_coleoptile_feuille_2<-append(liste3,which(data_final$Couple == data_final$Couple[which(data_final$vitesse_coleoptile_feuille_2<0)]))
View(data_final)
data_final$Ligne = as.numeric(data_final$Ligne)
data_final[data_final$Bloc %in% c(2,4,6),]$Ligne = data_final[data_final$Bloc %in% c(2,4,6),]$Ligne + 100
data_final$Colonne = as.numeric(data_final$Colonne)
data_final[data_final$Bloc %in% c(1,2),]$Colonne = data_final[data_final$Bloc %in% c(1,2),]$Colonne + 100
data_final[data_final$Bloc %in% c(3,4),]$Colonne = data_final[data_final$Bloc %in% c(3,4),]$Colonne + 200
View(data_final)
data_final$Ligne = as.numeric(data_final$Ligne)
data_final[data_final$Bloc %in% c(2,4,6),]$Ligne = data_final[data_final$Bloc %in% c(2,4,6),]$Ligne + 9
View(data_final)
liste_rht<-read.csv("liste_génotypes.csv")
data_final<-as_tibble(read.csv("Mesures_neighbors_final.tsv",header=TRUE,sep="\t"))
for (elt in (1:nrow(data_final))){
if (data_final$plante_genotype[elt]%in%c("114","235","329","376","395","482","89")){
data_final$RHT_rht[elt]="rht"
}
else{
data_final$RHT_rht[elt]="RHT"
}
}
names(data_final)
data_dates<-read.csv("Mesures_neighbors_dates.csv",header=TRUE,sep=",")
liste<-which(!is.na(data_dates$date_ligule_1)&(is.na(data_dates$date_ligule_2)))
data_dates$date_ligule_2=as.numeric(substr(data_dates$date_ligule_2,1,2))
data_dates<-data_dates %>% mutate(RHT_rht=data_final$RHT_rht)
liste2<-which(is.na(data_final$Longueur_feuille_2))
liste3<-which(data_final$Couple%in%data_final$Couple[liste2])
liste_vitesse_coleoptile_feuille_2<-append(liste3,which(data_final$Couple == data_final$Couple[which(data_final$vitesse_coleoptile_feuille_2<0)]))
View(data_final)
data_final$Ligne = as.numeric(data_final$Ligne)
data_final[data_final$Bloc %in% c(2,4,6),]$Ligne = data_final[data_final$Bloc %in% c(2,4,6),]$Ligne + 9
View(data_final)
data_final$Colonne = as.numeric(data_final$Colonne)
data_final[data_final$Bloc %in% c(5,6),]$Colonne = data_final[data_final$Bloc %in% c(5,6),]$Colonne + 10
data_final[data_final$Bloc %in% c(3,4),]$Colonne = data_final[data_final$Bloc %in% c(3,4),]$Colonne + 5
View(data_final)
View(data_final)
View(data_final)
data_final<-select(data_final,-Surface_feuille_2)
data_final<-select(data_final,-c(Surface_feuille_2))
data_final<-select(data_final,-c(data_final$Surface_feuille_2))
data_final<-data_final %>% select(-c(data_final$Surface_feuille_2))
data_final<-data_final %>% select(-Surface_feuille_2)
data_final<-data_final %>% select(-Surface_feuille_2)
View(data_final)
data_final<-data_final %>% select(-c(16))
data_final<-data_final %>% select(-c(16))
data_final<-data_final[-c(16)]
View(data_final)
data_final<-data_final %>%
mutate(plante_genotype=as.factor(plante_genotype),
RHT_rht=as.factor(RHT_rht),
Nombre_de_feuille_ligulÃ.e=as.numeric(Nombre_de_feuille_ligulÃ.e),
Longueur_feuille_2=as.numeric(Longueur_feuille_2),
vitesse_longueur_f1=as.numeric(vitesse_longueur_f1),
vitesse_largeur_f1=as.numeric(vitesse_largeur_f1),
poids_graine=as.numeric(poids_graine),
vitesse_coleoptile_feuille_1=as.numeric(vitesse_coleoptile_feuille_1),
vitesse_coleoptile_feuille_2=as.numeric(vitesse_coleoptile_feuille_2),
Monoculture_Couple=as.factor(Monoculture_Couple),
Condition_hydrique=as.factor(Condition_hydrique),
RHT_rht=as.factor(RHT_rht),
Bloc=as.factor(Bloc),
Colonne=as.factor(Colonne),
Ligne=as.factor(Ligne),
plante_genotype=as.factor(plante_genotype),
Nombre_de_feuille_ligulÃ.e=as.numeric(Nombre_de_feuille_ligulÃ.e))
data_final_pair = data_final[c(1:270)*2,]
data_final_impair = data_final[c((1:270)*2 -1),]
data_final_pair$voisin = data_final_impair$plante_genotype
data_final_impair$voisin = data_final_pair$plante_genotype
data_final = as.data.frame(rbind(data_final_pair,data_final_impair))
View(data_final)
View(data_final)
data_final<-data_final[-liste3]
View(data_final)
data_final<-data_final[-liste3,]
View(data_final)
?write_tsv
?write_csv
write_csv(data_final,"Mesure_Neighbors_Arrange.csv")
mod = lm(Biomasse_seche ~ Bloc + Ligne, data = data_final)
mod = lm(Biomasse_seche ~ Bloc + Ligne + poids_graine+ plante_genotype , data = data_final)
anova(mod)
mod = lm(Biomasse_seche ~ Bloc + poids_graine+ plante_genotype , data = data_final)
anova(mod)
mod = lm(Biomasse_seche ~ Bloc + Ligne*Colonne, data = data_final)
anova(mod)
mod = lm(Biomasse_seche ~ Bloc + Ligne*Colonne, data = data_final)
anova(mod)
mod = lm(Biomasse_seche ~ Bloc + Ligne+Colonne, data = data_final)
anova(mod)
mod = lm(Biomasse_seche ~ Bloc + Ligne, data = data_final)
anova(mod)
mod = lm(Biomasse_seche ~ Bloc , data = data_final)
anova(mod)
mod = lm(Biomasse_seche ~ Bloc + poids_graine+ plante_genotype , data = data_final)
anova(mod)
mod = lm(Biomasse_seche ~ Bloc + poids_graine+ plante_genotype*voisin , data = data_final)
anova(mod)
mod = lm(Biomasse_seche ~ Bloc + poids_graine+ plante_genotype:voisin , data = data_final)
anova(mod)
mod = lm(Biomasse_seche ~ Bloc + poids_graine+ plante_genotype+plante_genotype:voisin , data = data_final)
anova(mod)
View(data_final)
View(data_final)
data_final<-data_final %>%
mutate(plante_genotype=as.factor(plante_genotype),
RHT_rht=as.factor(RHT_rht),
Nombre_de_feuille_ligulÃ.e=as.numeric(Nombre_de_feuille_ligulÃ.e),
Longueur_feuille_2=as.numeric(Longueur_feuille_2),
vitesse_longueur_f1=as.numeric(vitesse_longueur_f1),
vitesse_largeur_f1=as.numeric(vitesse_largeur_f1),
poids_graine=as.numeric(poids_graine),
vitesse_coleoptile_feuille_1=as.numeric(vitesse_coleoptile_feuille_1),
vitesse_coleoptile_feuille_2=as.numeric(vitesse_coleoptile_feuille_2),
Monoculture_Couple=as.factor(Monoculture_Couple),
Condition_hydrique=as.factor(Condition_hydrique),
RHT_rht=as.factor(RHT_rht),
Bloc=as.factor(Bloc),
Colonne=as.factor(Colonne),
Ligne=as.factor(Ligne),
plante_genotype=as.factor(plante_genotype),
Nombre_de_feuille_ligulÃ.e=as.numeric(Nombre_de_feuille_ligulÃ.e),
Couple=as.factor(Couple),
Position=as.factor(Position),
Position_pots=as.factor(Position_pots))
View(data_final)
data_vitesse_coleoptile_feuille_2<-data_final %>%
filter(vitesse_coleoptile_feuille_2>0)
data_vitesse_coleoptile_feuille_1<-data_final %>%
filter(vitesse_coleoptile_feuille_1>0)
data_vitesse_longueur_f1<- data_final %>%
filter(vitesse_longueur_f1>20)
data_vitesse_largeur_f1<-data_final %>%
filter(vitesse_largeur_f1>0.5)
View(data_final)
mod = lm(Biomasse_seche ~ Bloc , data = data_final)
anova(mod)
mod = lm(Biomasse_seche ~ Bloc + poids_graine+ plante_genotype+plante_genotype:voisin , data = data_final)
anova(mod)
mod = lm(Biomasse_seche ~ Bloc +Condition_hydrique, data = data_final)
anova(mod)
mod = lm(Biomasse_seche ~ Bloc + poids_graine+ plante_genotype+plante_genotype:voisin , data = data_final)
anova(mod)
mod = lm(Biomasse_seche ~ Bloc + poids_graine+ plante_genotype*voisin , data = data_final)
anova(mod)
mod = lm(Biomasse_seche ~ Bloc + poids_graine+ plante_genotype+plante_genotype*voisin , data = data_final)
anova(mod)
mod = lm(Biomasse_seche ~ Bloc + poids_graine+ plante_genotype+plante_genotype*voisin , data = data_final)
anova(mod)
mod = lm(Biomasse_seche ~ Bloc + poids_graine+ plante_genotype+plante_genotype:voisin , data = data_final)
anova(mod)
mod = lm(Biomasse_seche ~ Bloc + poids_graine+ plante_genotype:voisin , data = data_final)
anova(mod)
summary(mod)
mod = lm(Biomasse_seche ~ Bloc + poids_graine+ plante_genotype:voisin +plante_genotype, data = data_final)
summary(mod)
anova(mod)
View(data_final)
mod = lm(Biomasse_seche ~ Bloc + poids_graine + plante_genotype:voisin + plante_genotype, data = data_final)
summary(mod)
anova(mod)
anova(mod,mod1)
mod1 = lm(Biomasse_seche ~ Bloc + poids_graine + plante_genotype:voisin + plante_genotype, data = data_final)
mod = lm(Biomasse_seche ~ Bloc +Condition_hydrique, data = data_final)
anova(mod,mod1)
mod = lm(Biomasse_seche ~ Bloc +poids_graine, data = data_final)
mod1 = lm(Biomasse_seche ~ Bloc + poids_graine + plante_genotype:voisin + plante_genotype, data = data_final)
anova(mod,mod1)
mod = lm(Biomasse_seche ~ Bloc +poids_graine + plante_genotype, data = data_final)
mod1 = lm(Biomasse_seche ~ Bloc + poids_graine + plante_genotype:voisin + plante_genotype, data = data_final)
anova(mod,mod1)
mod = lm(Biomasse_seche ~ Bloc +poids_graine + plante_genotype:voisin, data = data_final)
mod1 = lm(Biomasse_seche ~ Bloc + poids_graine + plante_genotype:voisin + plante_genotype, data = data_final)
anova(mod,mod1)
mod = lm(Biomasse_seche ~ Bloc +poids_graine + plante_genotype, data = data_final)
mod1 = lm(Biomasse_seche ~ Bloc + poids_graine +plante_genotype+ plante_genotype:voisin, data = data_final)
anova(mod,mod1)
Model1 = mmer(Biomasse_seche ~ Bloc + poids_graine,
random = ~ plante_genotype,
data = data_final)
Model2 = mmer(Biomasse_seche ~ Bloc + poids_graine,
random = ~ plante_genotype + voisin + voisin:plante_genotype,data = data_final)
anova.mmer(Model1,Model2)
Model1 = mmer(Biomasse_seche ~ Bloc + poids_graine,
random = ~ plante_genotype,
data = data_final)
Model2 = mmer(Biomasse_seche ~ Bloc + poids_graine,
random = ~ plante_genotype + voisin:plante_genotype,data = data_final)
anova.mmer(Model1,Model2)
View(data_final)
mod = lm(Biomasse_seche ~ Bloc +poids_graine + plante_genotype, data = data_final)
mod1 = lm(Biomasse_seche ~ Bloc + poids_graine +plante_genotype+ plante_genotype:voisin, data = data_final)
summary(mod)
anova(mod,mod1)
p
mod = lm(Biomasse_seche ~ Bloc +poids_graine + plante_genotype, data = data_final)
mod1 = lm(Biomasse_seche ~ Bloc + poids_graine + plante_genotype:voisin, data = data_final)
summary(mod)
mod = lm(Biomasse_seche ~ Bloc +poids_graine , data = data_final)
mod1 = lm(Biomasse_seche ~ Bloc + poids_graine + plante_genotype:voisin, data = data_final)
summary(mod)
anova(mod,mod1)
mod = lm(Biomasse_seche ~ Bloc +poids_graine + plante_genotype, data = data_final)
mod1 = lm(Biomasse_seche ~ Bloc + poids_graine +plante_genotype+ plante_genotype:voisin, data = data_final)
anova(mod,mod1)
(mod)
summary(mod)
summary(mod1)
View(data_final)
mod = lm(Biomasse_seche ~ Bloc +poids_graine + plante_genotype, data = data_final)
mod1 = lm(Biomasse_seche ~ Bloc + poids_graine +plante_genotype+ Monoculture_Couple, data = data_final)
anova(mod,mod1)
summary(mod1)
mod1 = lm(Biomasse_seche ~ Bloc + poids_graine +plante_genotype+ RHT_rht, data = data_final)
summary(mod1)
anova(mod,mod1)
View(data_final)
mod = lm(Biomasse_seche ~ Bloc +poids_graine , data = data_final)
mod1 = lm(Biomasse_seche ~ Bloc + poids_graine + RHT_rht, data = data_final)
summary(mod1)
anova(mod,mod1)
mod1 = lm(Biomasse_seche ~ Bloc + poids_graine + plante_genotype, data = data_final)
mod = lm(Biomasse_seche ~ Bloc +poids_graine , data = data_final)
summary(mod1)
anova(mod,mod1)
mod1 = lm(Biomasse_seche ~ Bloc + poids_graine + plante_genotype:voisin, data = data_final)
mod = lm(Biomasse_seche ~ Bloc +poids_graine , data = data_final)
anova(mod,mod1)
mod = lm(Biomasse_seche ~ Bloc*Colonne*Ligne +poids_graine , data = data_final)
summary(mod1)
summary(mod)
anova(mod)
mod = lm(Biomasse_seche ~ Bloc*Colonne+Ligne +poids_graine , data = data_final)
anova(mod)
mod = lm(Biomasse_seche ~ Bloc*Ligne+Colonne +poids_graine , data = data_final)
mod1 = lm(Biomasse_seche ~ Bloc + poids_graine + plante_genotype:voisin, data = data_final)
summary(mod)
anova(mod)
mod = lm(Biomasse_seche ~ Bloc+ Bloc:Ligne+Colonne +poids_graine , data = data_final)
mod1 = lm(Biomasse_seche ~ Bloc + poids_graine + plante_genotype:voisin, data = data_final)
summary(mod)
anova(mod)
mod = lm(Biomasse_seche ~ Bloc+ Bloc+Ligne+Colonne +poids_graine , data = data_final)
summary(mod)
anova(mod)
mod = lm(Biomasse_seche ~ Bloc+ Bloc+Colonne +poids_graine , data = data_final)
summary(mod)
anova(mod)
mod = lm(Biomasse_seche ~ Bloc+ Bloc +poids_graine , data = data_final)
anova(mod)
summary(mod)
anova(mod)
mod = lm(Biomasse_seche ~ Bloc+ +poids_graine , data = data_final)
anova(mod)
mod = lm(Biomasse_seche ~ Bloc + poids_graine + Condition_hyrdrique, data = data_final)
mod = lm(Biomasse_seche ~ Bloc + poids_graine + Condition_hydrique, data = data_final)
summary(mod)
anova(mod)
mod = lm(Biomasse_seche ~ Bloc + poids_graine + Condition_hydrique:Bloc, data = data_final)
summary(mod)
anova(mod)
mod = lm(Biomasse_seche ~ Bloc + poids_graine + plante_genotype*Condition_hydrique, data = data_final)
summary(mod)
anova(mod)
mod = lm(Biomasse_seche ~ Bloc + poids_graine + plante_genotype+Condition_hydrique, data = data_final)
anova(mod)
mod = lm(Biomasse_seche ~ Bloc + poids_graine + plante_genotype+plante_geotype:Condition_hydrique, data = data_final)
summary(mod)
anova(mod)
mod = lm(Biomasse_seche ~ Bloc + poids_graine + plante_genotype+plante_geotype:Condition_hydrique, data = data_final)
anova(mod)
mod = lm(Biomasse_seche ~ Bloc + poids_graine + plante_genotype + plante_genotype:Condition_hydrique, data = data_final)
anova(mod)
mod = lm(Biomasse_seche ~ Bloc + poids_graine + plante_genotype*voisin, data = data_final)
anova(mod)
mod = lm(Biomasse_seche ~ Bloc + poids_graine + plante_genotype+voisin, data = data_final)
anova(mod)
mod = lm(Biomasse_seche ~ Bloc + poids_graine + plante_genotype+plante_genotype:voisin, data = data_final)
anova(mod)
View(data_final)
mod = lm(Biomasse_seche ~ Bloc + poids_graine + plante_genotype, data = data_final)
summary(mod)
anova(mod)
View(data_final)
mod = lm(Longueur_feuille_2 ~ Bloc + poids_graine + plante_genotype, data = data_final)
summary(mod)
anova(mod)
mod = lm(Longueur_feuille_2 ~ Bloc, data = data_final)
anova(mod)
summary(mod)
anova(mod)
mod = lm(Longueur_feuille_2 ~ Bloc*Ligne*Colonne, data = data_final)
anova(mod)
summary(mod)
mod = lm(Longueur_feuille_2 ~ Bloc+Ligne*Colonne, data = data_final)
anova(mod)
mod = lm(Longueur_feuille_2 ~ Bloc*Ligne+Colonne, data = data_final)
anova(mod)
mod = lm(Longueur_feuille_2 ~ Ligne+Bloc*Colonne, data = data_final)
anova(mod)
mod = lm(Longueur_feuille_2 ~ Ligne+Bloc, data = data_final)
anova(mod)
mod = lm(Longueur_feuille_2 ~ poiids_graine, data = data_final)
mod = lm(Longueur_feuille_2 ~ poids_graine, data = data_final)
anova(mod)
mod = lm(Longueur_feuille_2 ~ plante_genotype, data = data_final)
anova(mod)
summary(mod)
mod = lm(Longueur_feuille_2 ~ Condition_hydrique+plante_genotype, data = data_final)
anova(mod)
summary(mod)
anova(mod)
write_csv(data_final,"Mesure_Neighbors_Arrange.csv")
mod = lm(Longueur_feuille_2 ~ Condition_hydrique*plante_genotype, data = data_final)
anova(mod)
View(data_final)
for (i in c(11:15)){
print(hist(data_final[,i],main=names(data_final)[i]))
}
data_vitesse_coleoptile_feuille_2<-data_final %>%
filter(vitesse_coleoptile_feuille_2>0)
data_vitesse_coleoptile_feuille_1<-data_final %>%
filter(vitesse_coleoptile_feuille_1>0)
data_vitesse_longueur_f1<- data_final %>%
filter(vitesse_longueur_f1>20)
data_vitesse_largeur_f1<-data_final %>%
filter(vitesse_largeur_f1>0.5)
data_dates<-data_dates[-liste3,] %>%
mutate(poids_graine=as.numeric(poids_graine),
plante_genotype=as.character(plante_genotype),
Bloc=as.numeric(Bloc),
Colonne=as.numeric(Colonne),
Ligne=as.numeric(Ligne),
Condition_hydrique=as.character(Condition_hydrique),
Monoculture_Couple=as.character(Monoculture_Couple),
date_ligule_2=as.numeric(substr(date_ligule_2,1,2))) %>%
filter(!is.na(date_ligule_2))
data_final<-as.data.frame(data_final)
for (i in c(11:15)){
print(hist(data_final[,i],main=names(data_final)[i]))
}
hist(data_vitesse_coleoptile_feuille_1$vitesse_coleoptile_feuille_1)
hist(data_vitesse_coleoptile_feuille_2$vitesse_coleoptile_feuille_2)
hist(data_vitesse_coleoptile_feuille_1$vitesse_coleoptile_feuille_1)
hist(data_vitesse_coleoptile_feuille_2$vitesse_coleoptile_feuille_2)
hist(data_vitesse_longueur_f1$vitesse_longueur_f1)
hist(data_vitesse_largeur_f1$vitesse_largeur_f1)
hist(data_dates$date_ligule_2)
hist(data_final$Biomasse_seche)
shapiro.test(data_final$Biomasse_seche)
shapiro.test(data_final$Biomasse_seche)
shapiro.test(data_final$Biomasse_seche)
bartlett.test(data_final$Biomasse_seche)
bartlett.test(data_final$Biomasse_seche)
bartlett.test(data_final$Biomasse_seche,)
bartlett.test(data_final$Biomasse_seche~data_final$Bloc + data_final$poids_graine + data_final$plante_genotype)
bartlett.test(data_final$Biomasse_seche ~ data_final$Bloc + data_final$poids_graine + data_final$plante_genotype)
bartlett.test(Biomasse_seche ~ Bloc + poids_graine + plante_genotype)
bartlett.test(Biomasse_seche ~ Bloc + poids_graine + plante_genotype,data=data_final)
mod = lm(Biomasse_seche ~ Bloc + poids_graine + plante_genotype, data = data_final)
mod1 = lm(Biomasse_seche ~ Bloc + poids_graine + plante_genotype:voisin, data = data_final)
anova(mod)
summary(mod)
